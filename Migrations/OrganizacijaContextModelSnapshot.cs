// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace WEB_PROJEKAT.Migrations
{
    [DbContext(typeof(OrganizacijaContext))]
    partial class OrganizacijaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Models.Arena", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Drzava")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Kapacitet")
                        .HasColumnType("int");

                    b.Property<int?>("OrganizacijaID")
                        .HasColumnType("int");

                    b.Property<bool>("PotrebnaCovidPropusnica")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("OrganizacijaID");

                    b.ToTable("Arena");
                });

            modelBuilder.Entity("Models.Borac", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BorbaID")
                        .HasColumnType("int");

                    b.Property<int>("BrojPobeda")
                        .HasColumnType("int");

                    b.Property<int>("BrojPoraza")
                        .HasColumnType("int");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Kategorija")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("KnockoutRatio")
                        .HasColumnType("int");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Ranking")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("BorbaID");

                    b.ToTable("Borac");
                });

            modelBuilder.Entity("Models.Borba", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ArenaID")
                        .HasColumnType("int");

                    b.Property<string>("DrugiBorac")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("NovcanaNagradaUHiljadamaDolara")
                        .HasColumnType("int");

                    b.Property<string>("Pobednik")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PrviBorac")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("ArenaID");

                    b.ToTable("Borba");
                });

            modelBuilder.Entity("Models.Organizacija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Osnivac")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("VrednostOrganizacijeUMilionimaDolara")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Organizacija");
                });

            modelBuilder.Entity("Models.Arena", b =>
                {
                    b.HasOne("Models.Organizacija", "Organizacija")
                        .WithMany("Arene")
                        .HasForeignKey("OrganizacijaID");

                    b.Navigation("Organizacija");
                });

            modelBuilder.Entity("Models.Borac", b =>
                {
                    b.HasOne("Models.Borba", "Borba")
                        .WithMany("Borci")
                        .HasForeignKey("BorbaID");

                    b.Navigation("Borba");
                });

            modelBuilder.Entity("Models.Borba", b =>
                {
                    b.HasOne("Models.Arena", "Arena")
                        .WithMany("Borbe")
                        .HasForeignKey("ArenaID");

                    b.Navigation("Arena");
                });

            modelBuilder.Entity("Models.Arena", b =>
                {
                    b.Navigation("Borbe");
                });

            modelBuilder.Entity("Models.Borba", b =>
                {
                    b.Navigation("Borci");
                });

            modelBuilder.Entity("Models.Organizacija", b =>
                {
                    b.Navigation("Arene");
                });
#pragma warning restore 612, 618
        }
    }
}
